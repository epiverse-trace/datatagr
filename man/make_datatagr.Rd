% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_datatagr.R
\name{make_datatagr}
\alias{make_datatagr}
\title{Create a datatagr from a data.frame}
\usage{
make_datatagr(x, ..., tag_defaults = list(), allow_extra = TRUE)
}
\arguments{
\item{x}{a \code{data.frame} or a \code{tibble}}

\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> A series of tags provided as
\code{tag_name = "column_name"}. When specifying tags, please also see
\code{tag_defaults} to specify default values.}

\item{tag_defaults}{a list of default values for the provided tags. Defaults
to \code{list()}, effectively defaulting to NULL values.}

\item{allow_extra}{a \code{logical} indicating if additional data tags not
currently recognized by \code{datatagr} should be allowed; if \code{FALSE}, unknown
tags will trigger an error}
}
\value{
The function returns a \code{datatagr} object.
}
\description{
This function converts a \code{data.frame} or a \code{tibble} into a \code{datatagr} object,
where data are tagged. The output will seem to be the same \code{data.frame}, but
\code{datatagr}-aware packages will then be able to automatically use tagged
fields for further data cleaning and analysis.
}
\examples{

x <- make_datatagr(cars,
  age = "speed",
  distance = "dist"
)

## print result - just first few entries
head(x)

## check tags
tags(x)

## Tags can also be passed as a list with the splice operator (!!!)
my_tags <- list(
  age = "speed",
  distance = "dist"
)
new_x <- make_datatagr(cars, !!!my_tags)

## The output is strictly equivalent to the previous one
identical(x, new_x)

}
\seealso{
\itemize{
\item An overview of the \link{datatagr} package
\item \code{\link[=tags_types]{tags_types()}}: for the associated accepted types/classes
\item \code{\link[=tags]{tags()}}: for a list of tagged variables in a \code{datatagr}
\item \code{\link[=set_tags]{set_tags()}}: for modifying tags
\item \code{\link[=tags_df]{tags_df()}}: for selecting variables by tags
}
}
