% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_datatagr.R
\name{validate_datatagr}
\alias{validate_datatagr}
\title{Checks the content of a datatagr object}
\usage{
validate_datatagr(x, ...)
}
\arguments{
\item{x}{a \code{datatagr} object}

\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> A named list with variable
names in \code{x} as list names and the related types as list values.}
}
\value{
If checks pass, a \code{datatagr} object; otherwise issues an error.
}
\description{
This function evaluates the validity of a \code{datatagr} object by checking the
object class, its labels, and the types of variables. It combines
validation checks made by \code{\link[=validate_types]{validate_types()}} and \code{\link[=validate_labels]{validate_labels()}}. See
'Details' section for more information on the checks performed.
}
\details{
The following checks are performed:
\itemize{
\item \code{x} is a \code{datatagr} object
\item variables in \code{x} have a well-formed \code{label} attribute
\item variables correspond to the specified types
}
}
\examples{

## create a valid datatagr
x <- cars |>
  make_datatagr(
    speed = "Miles per hour",
    dist = "Distance in miles"
  )
x

## validation
validate_datatagr(x,
  speed = c("numeric", "factor"),
  dist = "numeric"
)

## the below issues an error
## note: tryCatch is only used to avoid a genuine error in the example
tryCatch(validate_datatagr(x,
  speed = c("numeric", "factor"),
  dist = "factor"
), error = paste)
}
\seealso{
\itemize{
\item \code{\link[=validate_types]{validate_types()}} to check if variables have the right types
\item \code{\link[=validate_labels]{validate_labels()}} to perform a series of checks on the tags
}
}
